// <auto-generated />
using System;
using AnimalShelter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalShelter.Migrations
{
    [DbContext(typeof(BUPawsDb))]
    [Migration("20191231133544_healthTableAndDataAdded")]
    partial class healthTableAndDataAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimalShelter.Data.PawArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pawAreas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "GK",
                            Name = "Güney Kampüs"
                        },
                        new
                        {
                            Id = 2,
                            Code = "KK",
                            Name = "Kuzey Kampüs"
                        },
                        new
                        {
                            Id = 3,
                            Code = "UK",
                            Name = "Uçaksavar Kampüs"
                        },
                        new
                        {
                            Id = 4,
                            Code = "HK",
                            Name = "Hisar Kampüs"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SK",
                            Name = "Sarıtepe Kampüs"
                        },
                        new
                        {
                            Id = 6,
                            Code = "KAK",
                            Name = "Kandilli Kampüs"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Data.PawHealth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HealthyOrSick")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pawHealths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HealthyOrSick = "Sağlıklı"
                        },
                        new
                        {
                            Id = 2,
                            HealthyOrSick = "Hasta"
                        });
                });

            modelBuilder.Entity("AnimalShelter.Data.PawVaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VaccineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("pawVaccines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            VaccineName = "Aşılı"
                        },
                        new
                        {
                            Id = 2,
                            VaccineName = "Aşısız"
                        },
                        new
                        {
                            Id = 3,
                            VaccineName = "Bilinmiyor"
                        });
                });

            modelBuilder.Entity("AnimalShelter.PawUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PawUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2019, 12, 31, 16, 35, 44, 252, DateTimeKind.Local).AddTicks(3644),
                            Name = "YMB",
                            Password = "admin",
                            Surname = "Bal",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
